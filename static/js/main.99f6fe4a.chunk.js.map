{"version":3,"sources":["components/CustomerDelete.js","components/Customer.js","components/CustomerAdd.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Customer","props","handleClickOpen","setState","open","handleClose","state","id","console","log","this","Button","variant","color","onClick","Dialog","onClose","DialogTitle","DialogContent","DialogActions","e","deleteCustomer","React","Component","customer","img","image","TableRow","TableCell","src","name","age","gender","job","CustomerDelete","CustomerAdd","handleFormSubmit","preventDefault","addCustomer","then","response","data","stateRefresh","file","userName","birthday","fileName","handleFileChange","target","files","value","handleValueChange","nextState","formData","FormData","append","post","headers","classes","className","hidden","accept","type","onChange","htmlFor","component","TextField","label","withStyles","theme","display","customers","head","App","completed","searchKeyword","callApi","res","catch","err","a","fetch","json","body","progress","root","AppBar","position","Toolbar","IconButton","menuButton","aria-label","Typography","title","noWrap","grow","search","searchIcon","InputBase","placeholder","inputRoot","input","inputInput","menu","Paper","Table","table","TableHead","map","i","key","TableBody","width","minWidth","marginTop","marginBottom","justifyContent","paper","marginLeft","marginRight","margin","spacing","unit","flexGrow","tableHead","fontSize","breakpoints","up","borderRadius","shape","backgroundColor","fade","palette","common","white","height","pointerEvents","alignItems","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","Boolean","window","location","hostname","match","createMuiTheme","typography","fontFamily","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.99f6fe4a.chunk.js","sourcesContent":["import React from 'react';  \r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass Customer extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false\r\n    }\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n      this.setState({\r\n          open: true\r\n      });\r\n  }\r\n\r\n  handleClose = () => {\r\n      this.setState({\r\n          open: false\r\n      })\r\n  }\r\n\r\n  deleteCustomer(id) {\r\n    console.log(id, \"삭제 됩니다.\");\r\n    this.setState({\r\n        open: false\r\n    })\r\n      // const url = '/api/customers/' + id;\r\n      // fetch(url, {\r\n      //     method: 'DELETE'\r\n      // });\r\n      // this.props.stateRefresh();\r\n  }\r\n  render() {  \r\n    return (  \r\n      <div>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickOpen}>삭제</Button>\r\n        <Dialog open={this.state.open} onClose={this.handleClose}>\r\n          <DialogTitle>삭제 경고</DialogTitle>\r\n          <DialogContent>\r\n            선택한 고객 정보가 삭제 됩니다.\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={(e) => {this.deleteCustomer(this.props.id)}}>삭제</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n} \r\nexport default Customer;","import React from 'react'; \r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport CustomerDelete from './CustomerDelete'\r\n\r\nclass Customer extends React.Component{\r\n  render() {\r\n    const customer = this.props.customer;\r\n    const img = this.props.customer.image+this.props.customer.id;\r\n    return ( \r\n      <TableRow>\r\n      <TableCell >{customer.id}</TableCell>\r\n        <TableCell ><img src={img}/></TableCell>\r\n        <TableCell >{customer.name}</TableCell>\r\n        <TableCell >{customer.age}</TableCell>\r\n        <TableCell >{customer.gender}</TableCell>\r\n        <TableCell >{customer.job}</TableCell>\r\n        \r\n        <TableCell><CustomerDelete  id={customer.id}/></TableCell>\r\n      </TableRow>\r\n    )\r\n  }\r\n} \r\nexport default Customer;","import React from 'react';\r\nimport { post } from 'axios';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    hidden: {\r\n        display: 'none'\r\n    }\r\n});\r\n\r\nclass CustomerAdd extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null,\r\n            userName: '',\r\n            birthday: '',\r\n            gender: '',\r\n            job: '',\r\n            fileName: '',\r\n            open: false\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.addCustomer()\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                this.props.stateRefresh();\r\n            })\r\n        this.setState({\r\n            file: null,\r\n            userName: '',\r\n            birthday: '',\r\n            gender: '',\r\n            job: '',\r\n            fileName: '',\r\n            open: false\r\n        })\r\n    }\r\n\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            file: e.target.files[0],\r\n            fileName: e.target.value\r\n        })\r\n    }\r\n\r\n    handleValueChange = (e) => {\r\n        let nextState = {};\r\n        nextState[e.target.name] = e.target.value;\r\n        this.setState(nextState);\r\n    }\r\n\r\n    addCustomer = () => {\r\n        const url = '/api/customers';\r\n        const formData = new FormData();\r\n        formData.append('image', this.state.file);\r\n        formData.append('name', this.state.userName);\r\n        formData.append('birthday', this.state.birthday);\r\n        formData.append('gender', this.state.gender);\r\n        formData.append('job', this.state.job);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        }\r\n        return post(url, formData, config);\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            file: null,\r\n            userName: '',\r\n            birthday: '',\r\n            gender: '',\r\n            job: '',\r\n            fileName: '',\r\n            open: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\r\n                    고객 추가하기\r\n                </Button>\r\n                <Dialog open={this.state.open} onClose={this.handleClose}>\r\n                    <DialogTitle>고객 추가</DialogTitle>\r\n                    <DialogContent>\r\n                        <input className={classes.hidden} accept=\"image/*\" id=\"raised-button-file\" type=\"file\" file={this.state.file} value={this.state.fileName} onChange={this.handleFileChange}/><br/>\r\n                        <label htmlFor=\"raised-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\" name=\"file\">\r\n                                {this.state.fileName === \"\" ? \"프로필 이미지 선택\" : this.state.fileName}\r\n                            </Button>\r\n                        </label>\r\n                        <br/>\r\n                        <TextField label=\"이름\" type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleValueChange}/><br/>\r\n                        <TextField label=\"생년월일\" type=\"text\" name=\"birthday\" value={this.state.birthday} onChange={this.handleValueChange}/><br/>\r\n                        <TextField label=\"성별\" type=\"text\" name=\"gender\" value={this.state.gender} onChange={this.handleValueChange}/><br/>\r\n                        <TextField label=\"직업\" type=\"text\" name=\"job\" value={this.state.job} onChange={this.handleValueChange}/><br/>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>추가</Button>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(CustomerAdd);","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Customer from './components/Customer'\nimport CustomerAdd from './components/CustomerAdd';\n\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport {withStyles} from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\n\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    minWidth: 1080\n  },\n  menu: {\n    marginTop: 15,\n    marginBottom: 15,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  paper: {\n    marginLeft: 18,\n    marginRight: 18\n  },\n  progress: {\n    margin: theme.spacing.unit * 2\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  tableHead: {\n    fontSize: '1.0rem'\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  }\n})\n\nconst customers = [\n  {\n    id: 1,\n    name: '홍길동',\n    image: 'https://placeimg.com/64/64/',\n    age: 19,\n    gender: '남',\n    job: '대학생'\n   },\n   {\n    id: 2,\n    name: '홍길서',\n    image: 'https://placeimg.com/64/64/',\n    age: 13,\n    gender: '남',\n    job: '대학생'\n   },\n   {\n    id: 3,\n    name: '홍길남',\n    image: 'https://placeimg.com/64/64/',\n    age: 15,\n    gender: '남',\n    job: '대학생'\n   },\n   {\n    id: 4,\n    name: '홍길북',\n    image: 'https://placeimg.com/64/64/',\n    age: 15,\n    gender: '남',\n    job: '대학생'\n   },\n   {\n    id: 5,\n    name: '송하륜',\n    image: 'https://placeimg.com/64/64/',\n    age: 12,\n    gender: '남',\n    job: '유툽어(크리에이털)'\n   }\n];\n  \nconst head = [\n  'ID','사진','이름','나이','성별','직업'\n]\n \nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      customers: '',\n      completed: 0,\n      searchKeyword: ''\n    }\n  }\n\n  stateRefresh = () => {\n    this.setState({\n      customers: '',\n      completed: 0,\n      searchKeyword: ''\n    });\n    this.callApi()\n      .then(res => this.setState({customers: res}))\n      .catch(err => console.log(err));\n  }\n\n  componentDidMount() {\n    return;\n    this.timer = setInterval(this.progress, 20);\n    this.callApi()\n      .then(res => this.setState({customers: res}))\n      .catch(err => console.log(err));\n  }\n\n  callApi = async () => {\n    const response = await fetch('/api/customers');\n    const body = await response.json();\n    return body;\n  }\n\n  progress = () => {\n    const { completed } = this.state;\n    this.setState({ completed: completed >= 100 ? 0 : completed + 1});\n  }\n\n  handleValueChange = (e) => {\n    let nextState = {};\n    nextState[e.target.name] = e.target.value;\n    this.setState(nextState);\n  }  \n  render() {\n    const { classes } = this.props;\n    console.log(classes)\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Open drawer\">\n              <MenuIcon />\n            </IconButton>\n            <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n              고객 관리 시스템\n            </Typography>\n            <div className={classes.grow} />\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"검색하기\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                name=\"searchKeyword\"\n                value={this.state.searchKeyword}\n                onChange={this.handleValueChange}\n              />\n            </div>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.menu}>\n          <CustomerAdd stateRefresh={this.stateRefresh}/>\n        </div>\n        <Paper>\n          <Table   className={classes.table}>\n            <TableHead>\n              <TableRow>\n                {\n                  head.map((data,i) => {\n                    return (\n                      <TableCell key={i}>{data}</TableCell>\n                    );\n                  })\n                }\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                customers.map((data,i) => {\n                  return (\n                    <Customer key={i} customer={data}></Customer>\n                  );\n                })\n              }\n            </TableBody>\n            \n          </Table>\n        </Paper>\n      </div>\n    )\n  };\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n      fontFamily: '\"Noto Sans KR\", serif',\n  }\n})\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <App />\n  </MuiThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}