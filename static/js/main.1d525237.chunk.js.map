{"version":3,"sources":["components/CustomerDelete.js","components/Customer.js","components/CustomerAdd.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Customer","props","handleClickOpen","setState","open","handleClose","state","console","log","this","removeCustomer","id","Button","variant","color","onClick","Dialog","onClose","DialogTitle","DialogContent","DialogActions","e","deleteCustomer","React","Component","customer","img","image","TableRow","TableCell","src","name","age","gender","job","CustomerDelete","CustomerAdd","handleFormSubmit","preventDefault","addCustomer","handleFileChange","file","target","files","fileName","value","handleValueChange","nextState","userName","classes","className","hidden","accept","type","onChange","htmlFor","component","TextField","label","withStyles","theme","display","customers","head","App","stateRefresh","change","push","filter","c","callApi","a","fetch","response","json","body","progress","completed","searchKeyword","root","AppBar","position","Toolbar","IconButton","menuButton","aria-label","Typography","title","noWrap","grow","search","searchIcon","InputBase","placeholder","inputRoot","input","inputInput","menu","Paper","Table","table","TableHead","map","data","i","key","TableBody","colSpan","align","CircularProgress","width","minWidth","marginTop","marginBottom","justifyContent","paper","marginLeft","marginRight","margin","spacing","unit","flexGrow","tableHead","fontSize","breakpoints","up","borderRadius","shape","backgroundColor","fade","palette","common","white","height","pointerEvents","alignItems","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","Boolean","window","location","hostname","match","createMuiTheme","typography","fontFamily","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.1d525237.chunk.js","sourcesContent":["import React from 'react';  \r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass Customer extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false\r\n    }\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n      this.setState({\r\n          open: true\r\n      });\r\n  }\r\n\r\n  handleClose = () => {\r\n      this.setState({\r\n          open: false\r\n      })\r\n  }\r\n\r\n  deleteCustomer( ) {\r\n    console.log( \"삭제 됩니다.\");\r\n    this.props.removeCustomer(this.props.id);\r\n    this.setState({\r\n        open: false\r\n    })\r\n      // const url = '/api/customers/' + id;\r\n      // fetch(url, {\r\n      //     method: 'DELETE'\r\n      // });\r\n      // this.props.stateRefresh();\r\n  }\r\n  render() {  \r\n    return (  \r\n      <div>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickOpen}>삭제</Button>\r\n        <Dialog open={this.state.open} onClose={this.handleClose}>\r\n          <DialogTitle>삭제 경고</DialogTitle>\r\n          <DialogContent>\r\n            선택한 고객 정보가 삭제 됩니다.\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={(e) => {this.deleteCustomer()}}>삭제</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    )\r\n  }\r\n} \r\nexport default Customer;","import React from 'react'; \r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport CustomerDelete from './CustomerDelete'\r\n\r\nclass Customer extends React.Component{\r\n  render() {\r\n    const customer = this.props.customer;\r\n    const img = this.props.customer.image+this.props.customer.id;\r\n    return ( \r\n      <TableRow>\r\n      <TableCell >{customer.id}</TableCell>\r\n        <TableCell ><img src={img}/></TableCell>\r\n        <TableCell >{customer.name}</TableCell>\r\n        <TableCell >{customer.age}</TableCell>\r\n        <TableCell >{customer.gender}</TableCell>\r\n        <TableCell >{customer.job}</TableCell>\r\n        \r\n        <TableCell><CustomerDelete  id={customer.id} removeCustomer={this.props.removeCustomer}/></TableCell>\r\n      </TableRow>\r\n    )\r\n  }\r\n} \r\nexport default Customer;","import React from 'react';\r\nimport { post } from 'axios';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    hidden: {\r\n        display: 'none'\r\n    }\r\n});\r\n\r\nclass CustomerAdd extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null,\r\n            userName: '',\r\n            age: '',\r\n            gender: '',\r\n            job: '',\r\n            fileName: '',\r\n            open: false\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.addCustomer();\r\n        //     .then((response) => {\r\n        //         console.log(response.data);\r\n        //         this.props.stateRefresh();\r\n        //     })\r\n        // this.setState({\r\n        //     file: null,\r\n        //     userName: '',\r\n        //     birthday: '',\r\n        //     gender: '',\r\n        //     job: '',\r\n        //     fileName: '',\r\n        //     open: false\r\n        // })\r\n    }\r\n\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            file: e.target.files[0],\r\n            fileName: e.target.value\r\n        })\r\n    }\r\n\r\n    handleValueChange = (e) => {\r\n        let nextState = {};\r\n        nextState[e.target.name] = e.target.value;\r\n        this.setState(nextState);\r\n    }\r\n    id = 7\r\n    addCustomer = () => {\r\n        const customer = {\r\n            id:this.id,\r\n            name: this.state.userName,\r\n            image: 'https://placeimg.com/64/64/',\r\n            age: this.state.age,\r\n            gender: this.state.gender,\r\n            job: this.state.job\r\n        };\r\n        this.id++;\r\n        this.props.addCustomer(customer);\r\n\r\n        return;\r\n        const url = '/api/customers';\r\n        const formData = new FormData();\r\n        formData.append('image', this.state.file);\r\n        formData.append('name', this.state.userName);\r\n        formData.append('age', this.state.age);\r\n        formData.append('gender', this.state.gender);\r\n        formData.append('job', this.state.job);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        }\r\n        return post(url, formData, config);\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            file: null,\r\n            userName: '',\r\n            age: '',\r\n            gender: '',\r\n            job: '',\r\n            fileName: '',\r\n            open: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\r\n                    고객 추가하기\r\n                </Button>\r\n                <Dialog open={this.state.open} onClose={this.handleClose}>\r\n                    <DialogTitle>고객 추가</DialogTitle>\r\n                    <DialogContent>\r\n                        <input className={classes.hidden} accept=\"image/*\" id=\"raised-button-file\" type=\"file\" file={this.state.file} value={this.state.fileName} onChange={this.handleFileChange}/><br/>\r\n                        <label htmlFor=\"raised-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\" name=\"file\">\r\n                                {this.state.fileName === \"\" ? \"프로필 이미지 선택\" : this.state.fileName}\r\n                            </Button>\r\n                        </label>\r\n                        <br/>\r\n                        <TextField label=\"이름\" type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleValueChange}/><br/>\r\n                        <TextField label=\"나이\" type=\"text\" name=\"age\" value={this.state.age} onChange={this.handleValueChange}/><br/>\r\n                        <TextField label=\"성별\" type=\"text\" name=\"gender\" value={this.state.gender} onChange={this.handleValueChange}/><br/>\r\n                        <TextField label=\"직업\" type=\"text\" name=\"job\" value={this.state.job} onChange={this.handleValueChange}/><br/>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>추가</Button>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(CustomerAdd);","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Customer from './components/Customer'\nimport CustomerAdd from './components/CustomerAdd';\n\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {withStyles} from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\n\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    minWidth: 1080\n  },\n  menu: {\n    marginTop: 15,\n    marginBottom: 15,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  paper: {\n    marginLeft: 18,\n    marginRight: 18\n  },\n  progress: {\n    margin: theme.spacing.unit * 2\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  tableHead: {\n    fontSize: '1.0rem'\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  }\n})\n\nconst customers = [\n  {\n    id: 1,\n    name: '홍길동',\n    image: 'https://placeimg.com/64/64/',\n    age: 19,\n    gender: '남',\n    job: '대학생'\n   },\n   {\n    id: 2,\n    name: '홍길서',\n    image: 'https://placeimg.com/64/64/',\n    age: 13,\n    gender: '남',\n    job: '대학생'\n   },\n   {\n    id: 3,\n    name: '홍길남',\n    image: 'https://placeimg.com/64/64/',\n    age: 15,\n    gender: '남',\n    job: '대학생'\n   },\n   {\n    id: 4,\n    name: '홍길북',\n    image: 'https://placeimg.com/64/64/',\n    age: 15,\n    gender: '남',\n    job: '대학생'\n   },\n   {\n    id: 5,\n    name: '송하륜',\n    image: 'https://placeimg.com/64/64/',\n    age: 12,\n    gender: '남',\n    job: '유툽어(크리에이털)'\n   }\n];\n  \nconst head = [\n  'ID','사진','이름','나이','성별','직업'\n]\n \nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      customers,\n      completed: 0,\n      searchKeyword: ''\n    }\n  }\n\n  stateRefresh = () => {\n    this.setState({ change: \"1\" });\n    return;\n\n    this.setState({\n      customers: '',\n      completed: 0,\n      searchKeyword: '',\n      change:'1'\n    });\n    this.callApi()\n      .then(res => this.setState({customers: res}))\n      .catch(err => console.log(err));\n  }\n\n  addCustomer = (customer) => {\n    let customers = this.state.customers;\n    customers.push(customer);\n    this.setState({ customers: customers });\n  }\n  removeCustomer = (id) => {\n    var customers = this.state.customers.filter((c) => {\n      return c.id != id;\n    });\n    this.setState({ customers: customers });\n  }\n  componentDidMount() {\n\n    //this.addCustomer(customer);\n    //console.log(customers)\n    //this.setState({ customers: customers });\n    //console.log('this.state.customers',this.state);\n    //this.stateRefresh();\n    return;\n\n    this.timer = setInterval(this.progress, 20000);\n    this.callApi()\n      .then(res => this.setState({customers: res}))\n      .catch(err => console.log(err));\n  }\n\n  callApi = async () => {\n    const response = await fetch('/api/customers');\n    const body = await response.json();\n    return body;\n  }\n\n  progress = () => {\n    const { completed } = this.state;\n    this.setState({ completed: completed >= 100 ? 0 : completed + 1});\n  }\n\n  handleValueChange = (e) => {\n    let nextState = {};\n    nextState[e.target.name] = e.target.value;\n    this.setState(nextState);\n  }  \n  render() {\n    const { classes } = this.props;\n    \n    console.log('this.state.customers',this.state);\n    const filteredComponents = (list) => {\n      \n      return list.map((data,i) => {\n        console.log('filteredComponents data',data);\n        return (\n          <Customer key={i} customer={data} removeCustomer={this.removeCustomer} ></Customer>\n        );\n      }) \n    }\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Open drawer\">\n              <MenuIcon />\n            </IconButton>\n            <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n              고객 관리 시스템\n            </Typography>\n            <div className={classes.grow} />\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"검색하기\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                name=\"searchKeyword\"\n                value={this.state.searchKeyword}\n                onChange={this.handleValueChange}\n              />\n            </div>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.menu}>\n          <CustomerAdd stateRefresh={this.stateRefresh} addCustomer={this.addCustomer}/>\n        </div>\n        <Paper>\n          <Table   className={classes.table}>\n            <TableHead>\n              <TableRow>\n                {\n                  head.map((data,i) => {\n                    return (\n                      <TableCell key={i}>{data}</TableCell>\n                    );\n                  })\n                }\n              </TableRow>\n            </TableHead>\n            <TableBody>\n            {this.state.customers ? \n                filteredComponents(this.state.customers) : \n                <TableRow>\n                  <TableCell colSpan=\"6\" align=\"center\">\n                    <CircularProgress className={classes.progress} variant=\"determinate\" value={this.state.completed}/>\n                  </TableCell>\n                </TableRow>\n            } \n            </TableBody>\n            \n          </Table>\n        </Paper>\n      </div>\n    )\n  };\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n      fontFamily: '\"Noto Sans KR\", serif',\n  }\n})\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <App />\n  </MuiThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}